name: Python Package Test

on:
  push:
    branches: [ "main", "anonymized" ]
  pull_request:
    branches: [ "main", "anonymized" ]

jobs:
  ubuntu-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.12", "3.13"]
        
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build the wheel
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        python setup.py clean --all bdist_wheel
    - name: Install from wheel
      run: |
        pip install dist/resmetric-*.whl
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Evaluation tests
      run: |
        python -m unittest evaluation.test_resilience_metrics
    - name: Test Example Execution (resmetric-cli)
      run: |
        # Scenario 1
        resmetric-cli --auc --count --time ./example/fig.json
        # Scenario 2
        resmetric-cli --max-dips --bars ./example/fig.json
        # Scenario 3 takes too long => pray and hope the code works
        # Scenario 4a
        resmetric-cli --max-dips --bars --calc-res-over-time ./example/fig.json
        # Scenario 4b takes too long => pray and hope the code works

  macos-python-3_9:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Build the wheel
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        python setup.py clean --all bdist_wheel
    - name: Install from wheel
      run: |
        pip install dist/resmetric-*.whl
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Evaluation tests
      run: |
        python -m unittest evaluation.test_resilience_metrics
    - name: Test Example Execution (resmetric-cli)
      run: |
        # Scenario 1
        resmetric-cli --auc --count --time ./example/fig.json
        # Scenario 2
        resmetric-cli --max-dips --bars ./example/fig.json
        # Scenario 3 takes too long => pray and hope the code works
        # Scenario 4a
        resmetric-cli --max-dips --bars --calc-res-over-time ./example/fig.json
        # Scenario 4b takes too long => pray and hope the code works

  windows-python-3_9:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Build the wheel
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        python setup.py clean --all bdist_wheel
    - name: Install from wheel
      run: |
        for %%i in (dist\resmetric-*.whl) do pip install "%%i"
      shell: cmd
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test Example Execution (resmetric-cli)
      run: |
        # Scenario 1
        resmetric-cli --auc --count --time ./example/fig.json
        # Scenario 2
        resmetric-cli --max-dips --bars ./example/fig.json
        # Scenario 3 takes too long => pray and hope the code works
        # Scenario 4a
        resmetric-cli --max-dips --bars --calc-res-over-time ./example/fig.json
        # Scenario 4b takes too long => pray and hope the code works
